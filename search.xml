<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[2019년 회고]]></title>
      <url>/2019/12/30/2019-retrospect/</url>
      <content type="html"><![CDATA[<h2 id="2019-회고"><a href="#2019-회고" class="headerlink" title="2019 회고"></a>2019 회고</h2><p> 이번 연도는 기록을 남겨야 할 것 같아서 처음으로 회고를 작성한다.<br><a id="more"></a></p>
<p>2019년에 가장 큰 변화는 결혼이다. 10월에 결혼했고 스페인으로 신혼여행을 다녀왔다. 아직 결혼 생활이 얼마 안 되었지만, 너무 좋다. 더 빨리했으면 더 빨리 좋았을 텐데 아쉽다.</p>
<p>2019년은 프론트엔드 개발자 포지션으로 일했다. 한 회사의 성장을 경험해보는 좋은 경험이었다. </p>
<p>개발에 대한 정의가 많이 흔들린다. 사람이 불편한 일을 덜 할 수 있게 해준다, 개발자에겐 돈을 벌게 해준다, 이런 것보다 개발은 나에게 하면 재미있는 일이다. 이유에 대해 질문을 해보면 내 글(코드)가 잘 작동하면 좋고 그걸 또 고칠 수 있다는 게 마음에 든다. 작가가 된 느낌이다. 초안을 쓰고 고쳐서 더 좋은 글은 만들 수도 있고 초안으로도 사람들의 반응을 볼 수도 있다.</p>
<p>개발이 회사에서 하는 역할을 정의했을 때는 생각이 좀 달라지는데, 개발이 회사에서 하는 역할은 서포트라고 생각한다. 회사, 서비스에서 가장 중요한 건 내용물(어떤 서비스인지 무엇을 제공하는지)이고 개발은 그것을 도와주는 역할이다. 이 생각은 정말 개발을 작동하는 코드로만 바라봤을 때로 한정 지을 수 있는 단편적인 생각일 수 있다. 그럼에도 지금 생각하고 있는 개발은 빨리 구현해서 유저가 조금이나마 더 편하게 서비스를 이용할 수 있게 해주는 것이다. 내가 컴포넌트를 재사용할 수 있게 너무 많은 시간을 보낸다거나 리팩토링을 하면서 누구나 코드를 쉽게 이해하게 한다거나 이런 일에 시간을 많이 할애하진 않는다. 사실 최적화에도 신경을 많이 못 쓴다. 그 시간에 유저들이 요청하거나 필요한 기능을 만들어서 유저를 붙잡고 싶다.</p>
<p>지금 내 역할은 이 성장 속에서 빨리 유저가 변화를 느끼게 빠른 배포, 수정이라고 생각했다. 회사에선 정말 제품만 만들고 집에 와선 개발 공부를 했다. 집에서 하는 개인 공부는 어제보다 나은 코드를 작성하는 나를 만들어 준다고 생각하고 열심히 했다. 이렇게 해야 일하면서 밀렸던 코드의 퀄리티를 올릴 수 있지 않을까 생각했고 실제로도 많이 반영되었다.</p>
<p>평일엔 회사에 적용할 수 있는 책이나 강의를 들었고 주말엔 회사에서 할 수 없는 혼자만의 프로젝트도 진행했다. 개발에 대한 정의가 많이 흔들린다고 생각이 들었던 것은 내가 회사의 성장이란 명목하에 합리화하고 있는 것은 아닌지, 내가 생각하는 개발의 정의가 변명은 아닌지 계속 고민 중이기 때문이다.</p>
<p>2020년엔 지금 듣고 있는 노마드 코더 airbnb 클론 수업을 들으면서 주말 프로젝트 앱 제작 후 배포(flutter), 웹 제작 후 배포(react)를 하고 하나 하나 기능을 늘려갔으면 좋겠다.</p>
]]></content>
      
        
        <tags>
            
            <tag> 회고 </tag>
            
            <tag> Thinking </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[typeScript_chapter_4]]></title>
      <url>/2018/10/28/typeScript-chapter-4/</url>
      <content type="html"><![CDATA[<h2 id="타입스크립트-퀵스타트-4장-스터디"><a href="#타입스크립트-퀵스타트-4장-스터디" class="headerlink" title="타입스크립트  퀵스타트 4장 스터디"></a>타입스크립트  퀵스타트 4장 스터디</h2><a id="more"></a>
<h5 id="ES6의-for-of-문"><a href="#ES6의-for-of-문" class="headerlink" title="ES6의 for of 문"></a>ES6의 for of 문</h5><p>인덱스를 이용해 값을 가져올 수 있는 for in 문과 달리 for of 문은 곧바로 값을 가져올 수 있음.  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (<span class="keyword">const</span> value <span class="keyword">of</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]) &#123;</div><div class="line">    <span class="built_in">console</span>.log(value)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>for 문에서 const를 사용시 상수가 되어 증가 값이 바뀌지 않기 때문에 let을 사용하지만 for of문에선 사용할 수 있다.  </p>
]]></content>
      
        
        <tags>
            
            <tag> Study </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TypeScript_chapter_3]]></title>
      <url>/2018/10/21/typeScript-chapter-3/</url>
      <content type="html"><![CDATA[<ul>
<li>새로 타입스크립트 스터디를 시작한다. 책은 예전 회사에서 세미나를 위해 읽어봤던 정진욱님이 지은 [타입스크립트 퀵스타트]로 선택했다. 책 내용 요약 보다는s 내가 알고 있는 혹은, 새로 알게된 내용이 합쳐져서 여기 블로그에 정리할 것 같다. 공부하면서 회사에서도 빨리 썼으면 좋겠다.  </li>
</ul>
<h2 id="타입스크립트-퀵스타트-3장-스터디"><a href="#타입스크립트-퀵스타트-3장-스터디" class="headerlink" title="타입스크립트  퀵스타트 3장 스터디"></a>타입스크립트  퀵스타트 3장 스터디</h2><a id="more"></a>
<h4 id="변수-선언"><a href="#변수-선언" class="headerlink" title="변수 선언"></a>변수 선언</h4><p>자바스크립트에서 var 선언하면 호이스팅과 블록레벨스코프를 지원하지 않는 문제가 있다. 이부분은 타입스크립트라기 보다 es6에서 새로 도입된 변수 선언의 내용이다.  </p>
<p>호이스팅은 선언한 변수가 스코프의 최상위로 끌어올려지는 현상이다. 함수선언도 호이스팅되는데 처음엔 나도 구분없이 사용하다가 회사에 다니며 제대로 썼다.</p>
<p>여기서 궁금한 건 호이스팅이되니 변수선언과 함수선언을 위에다 쓰는건 코드의 가독성 때문일까 아니면 정말 코드 최적화에 영향을 끼칠까?  </p>
<h6 id="찾아보기"><a href="#찾아보기" class="headerlink" title="찾아보기"></a>찾아보기</h6><p><a href="https://stackoverflow.com/questions/5053073/is-defining-every-variable-at-the-top-always-the-best-approach" target="_blank" rel="external">https://stackoverflow.com/questions/5053073/is-defining-every-variable-at-the-top-always-the-best-approach</a><br><a href="https://medium.com/@bluepnume/theres-no-need-to-define-all-javascript-vars-once-at-the-top-of-a-function-and-there-hasn-t-been-a66b31f21822" target="_blank" rel="external">https://medium.com/@bluepnume/theres-no-need-to-define-all-javascript-vars-once-at-the-top-of-a-function-and-there-hasn-t-been-a66b31f21822</a></p>
<p>이런 글들을 보면 위쪽에 함수와 변수 선언은 성능 문제라기 보다 스타일 문제일까?<br>(<a href="https://stackoverflow.com/questions/52944892/does-the-top-of-the-function-declaration-and-variable-declaration-help-improve-p" target="_blank" rel="external">https://stackoverflow.com/questions/52944892/does-the-top-of-the-function-declaration-and-variable-declaration-help-improve-p</a>)<br>직접 질문 올렸음.  </p>
<p>예전에 블로그 글에서 var 선언과 let선언의 속도 차이 글을 본거 같다. </p>
<h6 id="찾아보기-1"><a href="#찾아보기-1" class="headerlink" title="찾아보기"></a>찾아보기</h6><p><a href="https://gomugom.github.io/let-vs-var-performance-compare/?fbclid=IwAR3acpyDHM8ku8DaOdES5qWAsrfeUb3kYK6rWMxQrFbM9z5f_A4kB0VhvWw" target="_blank" rel="external">https://gomugom.github.io/let-vs-var-performance-compare/?fbclid=IwAR3acpyDHM8ku8DaOdES5qWAsrfeUb3kYK6rWMxQrFbM9z5f_A4kB0VhvWw</a>  </p>
<p>let 선언자는 다음과 같은 특징을 가진다.  </p>
<ul>
<li>같은 블록 내에서 같은 이름의 변수를 중복해서 선언할 수 없음  </li>
<li>변수를 초기화하기 전에는 변수에 접근할 수 없게 해서 호이스팅을 방지  </li>
<li>선언할 변수에 블록 레벨 스코프를 적용  </li>
</ul>
<p>블록 레벨 스코프의 좋은 점은 뭘까? 블록만 다르면 변수 이름을 똑같이 쓸 수 있다? 그게 장점인가? 여러명이 작업을 할때 아무리 역할에 맞게 작성하더라도 변수이름이 겹칠 수 있기 떄문일까? </p>
<h6 id="찾아보기-2"><a href="#찾아보기-2" class="headerlink" title="찾아보기"></a>찾아보기</h6><p><a href="https://stackoverflow.com/questions/40394499/what-is-the-actual-advantage-of-using-let-block-scoping" target="_blank" rel="external">https://stackoverflow.com/questions/40394499/what-is-the-actual-advantage-of-using-let-block-scoping</a></p>
<p>const는 변수를 상수로 선언할 떄 사용한다. const를 이용해 변수를 선언하면 초기화는 가능하지만 재할당되지 않는 읽기 전용이다. 상수 말고도 let과 다른 점은 선언시 초기화를 해줘야 한다는 것이다. </p>
<p>const의 경우 재할당은 할 수 없지만 객체 리터럴의 속성으로 변경은 가능하다. </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> hun = &#123;  </div><div class="line">    <span class="attr">age</span>: <span class="number">30</span>,  </div><div class="line">    nickName = <span class="string">"hun08"</span>  </div><div class="line">&#125;  </div><div class="line"></div><div class="line">hun = &#123;  </div><div class="line">    <span class="attr">age</span>: <span class="number">31</span>,  </div><div class="line">    nickName = <span class="string">"hun0811"</span>  </div><div class="line">&#125;  </div></pre></td></tr></table></figure>
<p>위처럼 재할당을 할 수 없다. 하지만  </p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> hun = &#123;  </div><div class="line">    <span class="attr">age</span>: <span class="number">30</span>,  </div><div class="line">    nickName = <span class="string">"hun08"</span>  </div><div class="line">&#125;  </div><div class="line"></div><div class="line">hun.age = <span class="number">31</span>;  </div></pre></td></tr></table></figure>
<p>위처럼 변경은 가능하다.  </p>
<h4 id="타입-검사와-타입-선언"><a href="#타입-검사와-타입-선언" class="headerlink" title="타입 검사와 타입 선언"></a>타입 검사와 타입 선언</h4><p>정적 타입 검사 -&gt; 자바, C++<br>동적 타입 검사 -&gt; 자바스크립트  </p>
<p>점진적 타입 검사 -&gt; 타입스크립트, 파이썬  </p>
<p>점진적 타입 검사 : 컴파일 시간에 타입 검사를 수행하면서 필요에 따라 타입 선언의 생략을 허용. 타입을 선언을 생략하면 암시적 형변환이 일어남.  </p>
]]></content>
      
        <categories>
            
            <category> Study </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Study </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[자바스크립트 데이터구조와 알고리즘 스터디_01]]></title>
      <url>/2018/02/19/study-01/</url>
      <content type="html"><![CDATA[<h2 id="Learning-JavaScript-Data-Structures-and-Algorithms"><a href="#Learning-JavaScript-Data-Structures-and-Algorithms" class="headerlink" title="Learning JavaScript Data Structures and Algorithms"></a>Learning JavaScript Data Structures and Algorithms</h2><h4 id="비트-연산자"><a href="#비트-연산자" class="headerlink" title="비트 연산자"></a>비트 연산자</h4><p>p.42<br>MDN 연산자 <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Expressions_and_Operators" target="_blank" rel="external">링크</a><br>MDN 비트 연산자 <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Obsolete_Pages/Core_JavaScript_1.5_Guide/Operators/Bitwise_Operators" target="_blank" rel="external">링크</a><br><a id="more"></a><br>비트연산자 왜 사용하는 거지? 어디에 사용하지?</p>
<p>base64로 데이터를 전달할 때도 사용한다.  </p>
<p>답이 될까?<br><a href="https://stackoverflow.com/questions/654057/where-would-i-use-a-bitwise-operator-in-javascript" target="_blank" rel="external">https://stackoverflow.com/questions/654057/where-would-i-use-a-bitwise-operator-in-javascript</a><br><a href="https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5" target="_blank" rel="external">https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5</a></p>
<h4 id="객체지향프로그래밍-OOP"><a href="#객체지향프로그래밍-OOP" class="headerlink" title="객체지향프로그래밍(OOP)"></a>객체지향프로그래밍(OOP)</h4><p>P.51</p>
<ul>
<li>MDN 객체지향 프로그래밍  <ul>
<li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript" target="_blank" rel="external">https://developer.mozilla.org/ko/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript</a></li>
</ul>
</li>
<li>읽어볼 만한 글  <ul>
<li><a href="http://beyond.daesan.com/articles/2006/08/16/misunderstanding-and-truth-about-oop" target="_blank" rel="external">http://beyond.daesan.com/articles/2006/08/16/misunderstanding-and-truth-about-oop</a>  </li>
<li><a href="https://namu.wiki/w/%EA%B0%9D%EC%B2%B4%20%EC%A7%80%ED%96%A5%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D" target="_blank" rel="external">https://namu.wiki/w/%EA%B0%9D%EC%B2%B4%20%EC%A7%80%ED%96%A5%20%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D</a>  </li>
<li><a href="https://www.slideshare.net/plusjune/ss-46109239" target="_blank" rel="external">https://www.slideshare.net/plusjune/ss-46109239</a>  </li>
</ul>
</li>
</ul>
<h4 id="왜-자바스크립트는-서로-다른-데이터타입으로도-배열을-만들-수-있을까"><a href="#왜-자바스크립트는-서로-다른-데이터타입으로도-배열을-만들-수-있을까" class="headerlink" title="왜 자바스크립트는 서로 다른 데이터타입으로도 배열을 만들 수 있을까?"></a>왜 자바스크립트는 서로 다른 데이터타입으로도 배열을 만들 수 있을까?</h4><p>p.55</p>
<ul>
<li>언어적 특징인가?  </li>
</ul>
<h4 id="왜-자바스크립트에서-배열을-만들-때-new-Array-말고-을-이용하는-게-더-좋을-까"><a href="#왜-자바스크립트에서-배열을-만들-때-new-Array-말고-을-이용하는-게-더-좋을-까" class="headerlink" title="왜 자바스크립트에서 배열을 만들 때 new Array() 말고 []을 이용하는 게 더 좋을 까?"></a>왜 자바스크립트에서 배열을 만들 때 new Array() 말고 []을 이용하는 게 더 좋을 까?</h4><p>p.56  </p>
<ul>
<li>자바스크립트 패턴 p.59  <ul>
<li>Array() 생성자에 숫자 하나를 전달할 경우, 이 값은 배열의 첫 번째 원소 값이 되는게 아니라 배열의 길이를 지정한다. 즉 new Array(3)은 길이가 3이고 실제 원소 값은 가지지 않는 배열을 생성한다. </li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = [<span class="number">3</span>];</div><div class="line"><span class="built_in">console</span>.log(a.length); <span class="comment">//1</span></div><div class="line"><span class="built_in">console</span>.log(a[<span class="number">0</span>]) <span class="comment">//3</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">3</span>);</div><div class="line"><span class="built_in">console</span>.log(a.length); <span class="comment">//3</span></div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> a[<span class="number">0</span>]); <span class="comment">//"undefined"  </span></div></pre></td></tr></table></figure>
<h4 id="null-undefined-말고-empty는-뭐지"><a href="#null-undefined-말고-empty는-뭐지" class="headerlink" title="null, undefined 말고 empty는 뭐지?"></a>null, undefined 말고 empty는 뭐지?</h4><p>p.57 </p>
<ul>
<li>배열에서 크기는 지정되었는데 값이 없을 때 인가?  </li>
</ul>
<h4 id="숫자-정렬하는거-이거-왜-정렬되지-버블정렬-뭐-이런거-관련인가"><a href="#숫자-정렬하는거-이거-왜-정렬되지-버블정렬-뭐-이런거-관련인가" class="headerlink" title="숫자 정렬하는거 이거 왜 정렬되지? 버블정렬 뭐 이런거 관련인가?"></a>숫자 정렬하는거 이거 왜 정렬되지? 버블정렬 뭐 이런거 관련인가?</h4><p>p.69<br>number.sort(function(a, b) {<br>    return a-b;<br>})</p>
]]></content>
      
        <categories>
            
            <category> Study </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Data Structures </tag>
            
            <tag> Algorithms </tag>
            
            <tag> Study </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[컴퓨터과학 기초]]></title>
      <url>/2017/10/29/cs50-1/</url>
      <content type="html"><![CDATA[<p>취업을 하고 angularjs와 ionic1을 하면서 공부할게 많았다. 지금도 많지만 하다보니 어떤 프레임워크를 사용하던 기본인 javascript의 중요함을 계속 느꼈다.<br><a id="more"></a></p>
<p>거기서 더 나아가서 컴퓨터 전공을 안 했기 때문에 일하면서 계속 아쉬움이 있었다. 사이버대학교나 방통대를 알아보고 이것저것 둘러 보다가 이 강좌를 알게되었다. </p>
<p>처음엔 udacity에서 <a href="https://www.udacity.com/course/intro-to-computer-science--cs101" target="_blank" rel="external">Intro to Computer Science</a>를 들으려다가 지인에게 다른 수업도 추천 받은게 바로 <a href="https://www.edx.org/course/introduction-computer-science-harvardx-cs50x" target="_blank" rel="external">Introduction to Computer Science</a>이다. 선택에 가장 중요한 영향을 끼친건 역시…영어…</p>
<p>항상 영어와 함께하지만 퇴근해서도 듣기라도 늘리자는 심정으로 해외 강의를 많이 들었다. 어느 순간 한글화만 되어 있다면 빨리 듣자라는 마음으로 컴퓨터 기초 수업도 한글화 되어있는 게 없을까 했는데 다행이 이 수업이 한글자막과 한글 수업자료로 제공되는 사이트가 있다. </p>
<p><a href="http://www.edwith.org/connect_cs/joinLectures/10008" target="_blank" rel="external">Harvard CS50 x edwith</a>에 들어가면 잘 정리된 자료들을 볼 수 있다. 앞으로 퇴근 후 지금 보고 있는 자바스크립트 핵심가이드라는 책과 이 사이트로 공부할 것 같다.</p>
<p>참고로 이 한글화된 동영상은 최신의 영상은 아니다. 최신의 영상을 보고 싶다면 유투브나 위쪽 Introduction to Computer Science링크를 이용하면 될테고, 아이폰을 쓰는 사람은 iTunes U에서 검색해도 수업을 볼 수 있다. 다만 아이폰에서 볼 때는 영문자막도 안 나오니 최신영상에 영문 자막정도만 원한다면 들을 수 있는 방법은 많다. </p>
]]></content>
      
        <categories>
            
            <category> Computer Science </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> Computer Science </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Google Custom Search API에서 자료(이미지) 가져오기]]></title>
      <url>/2017/06/29/googleCustomSearch/</url>
      <content type="html"><![CDATA[<p>프로젝트를 진행하면서 사진을 외부에서 가져오고 싶은데 막히는 부분이 많았다.<br>인스타그램은 정책변경으로 자신의 사진 일부만을 가져올 수 있고 이미지 검색으로 가져오려면 따로 인증이 필요하다. 네이버나 다음의 경우도 image API가 있지만 HTTP 접근 제어(CORS)문제로 가져오기가 쉽지 않다.<br><a id="more"></a></p>
<p>구글의 경우도 image API가 있었지만 지금은 더 이상 지원을 하지 않는다.<br><img src="/images/imageSearchAPI.JPG" alt="구글 이미지 API">  </p>
<p>이젠 Google Custom Search를 이용해야 한다.<br>API를 사용하기위해 몇 가지 절차가 필요하다.  </p>
<ul>
<li>일단 밑의 사이트에 접속한다.<br><a href="https://console.developers.google.com/apis" target="_blank" rel="external">https://console.developers.google.com/apis</a>  </li>
</ul>
<p><img src="/images/api1.JPG" alt="API 관리자 페이지"><br>내 경우 이미 API를 사용하고 있어서 이렇게 뜨는 데 아마 처음 시작하는 사람도 비슷할 것이다.  여기서 빨간 네모칸 부분을 클릭하고 다음그림처럼 따라한다.  </p>
<p><img src="/images/api2.JPG" alt="프로젝트 추가">  </p>
<ul>
<li>이제 프로젝트 이름을 정해준다.  </li>
</ul>
<p><img src="/images/api3.JPG" alt="프로젝트 이름">  </p>
<p>이젠 이런 화면이 나올 것이다.</p>
<p><img src="/images/api4.JPG" alt="프로젝트 이름">  </p>
<ul>
<li>위 쪽에 API 사용 설정을 클릭한 다음 Custom Search API를 찾아 클릭한다.  </li>
</ul>
<p><img src="/images/api5.JPG" alt="커스텀 API 선택">  </p>
<ul>
<li>선택 후 위쪽에 사용설정을 선택하면 아래와 같은 화면이 나온다.  </li>
</ul>
<p><img src="/images/api6.JPG" alt="커스텀 API 설정">  </p>
<ul>
<li><p>화면에 보이는 것처럼 사용자 인증을 하라고 나오는 데 방법대로 하면 API key가 나온다.  </p>
</li>
<li><p>아래 사이트의 접속한 뒤 안내를 클릭하고 메뉴를 보면 JSON/Atom API가 있다.<br><a href="https://developers.google.com/custom-search/" target="_blank" rel="external">https://developers.google.com/custom-search/</a>  </p>
</li>
</ul>
<p><img src="/images/customSearch1.JPG" alt="커스텀 서치 API 문서">  </p>
<ul>
<li>key값을 가져오기 위해 GET A KEY를 클릭한다.  </li>
</ul>
<p><img src="/images/customSearch2.JPG" alt="key값 가져오기">  </p>
<ul>
<li>프로젝트 명을 선택해주고 key값을 복사해둔다.  </li>
</ul>
<p><img src="/images/customSearch3.JPG" alt="key값 가져오기2"><br><img src="/images/customSearch4.JPG" alt="key값 가져오기3">  </p>
<ul>
<li>custom search api를 사용하기 위해선 Custom search engine ID가 필요하다. 발급을 위해 다른 페이지로 이동한다.  </li>
</ul>
<p><img src="/images/customSearch5.JPG" alt="Custom search engine ID 발급">  </p>
<ul>
<li>검색엔진을 추가하면 이런 화면을 볼 수 있다. 검색 사이트를 적으라고 했는 데 사이트가 있다면 적지만 공부나 개인프로젝트에서 주소가 없을 경우가 많다. 이 부분은 나중에 삭제할테니 아래처럼 적어줘도 된다.  </li>
</ul>
<p><img src="/images/customSearch6.JPG" alt="Custom search engine ID 발급2">  </p>
<ul>
<li>이제 이런 화면을 만날 수 있다. 검색 설정을 하기 위해 화면에 보이는 제어판을 클릭한다.  </li>
</ul>
<p><img src="/images/customSearch7.JPG" alt="Custom search engine ID 발급2">  </p>
<ul>
<li>밑에 검색할 사이트를 삭제해주고 난 이미지 검색을 사용하기 위해 설정을 바꿨다. 각자 알맞게 변경하면 된다.  </li>
</ul>
<p><img src="/images/customSearch8.JPG" alt="Custom search engine ID 발급2">  </p>
<ul>
<li><p>위 쪽에 세부정보에 검색엔진 ID라고 써있는 버튼을 클릭하면 ID를 얻을 수 있다.  </p>
</li>
<li><p>설정을 변경한 뒤엔 항상 맨 밑에 있는 업데이트 버튼을 클릭한다.  </p>
</li>
<li><p>이제 밑의 방식처럼 GET으로 정보를 받아오면 된다.</p>
</li>
</ul>
<pre><code>GET https://www.googleapis.com/customsearch/v1?key=API키값&amp;cx=검색엔진ID&amp;q=검색어
</code></pre><p>자세한 파라미터 값 설정은 아래 사이트를 참고하면 된다.<br><a href="https://developers.google.com/custom-search/json-api/v1/reference/cse/list?hl=ko" target="_blank" rel="external">https://developers.google.com/custom-search/json-api/v1/reference/cse/list?hl=ko</a>  </p>
]]></content>
      
        <categories>
            
            <category> API </category>
            
        </categories>
        
        
        <tags>
            
            <tag> google customSearch </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo Themes(테마) 적용기]]></title>
      <url>/2017/06/07/apply-the-hexo-themes/</url>
      <content type="html"><![CDATA[<p>hexo로 블로그를 시작하며 어떤 테마를 사용할 지 고민했다.  프론트엔드 개발에 관한 포스팅보다 테마 바꾸기만 몇 번째인지…처음엔 일단 화려하고 애니메이션 많이 들어간 테마만 봤다. 그래서 선택한 것이<br><a id="more"></a></p>
<p><img src="/images/themes1.JPG" alt="spfk 테마"><br><a href="https://luuman.github.io/" target="_blank" rel="external">https://luuman.github.io/</a>  </p>
<p>들어가서 보면 알겠지만 글을 클릭하고 다시 홈화면으로 돌아오면 애니메이션이 바뀐다. 화려함에 이 테마를 선택해서 적용했지만 문제점은… 한자… 주석이 다 한자이고 메뉴도 한자로 되어있으니 적응 불가… 다른 테마를 찾아보자. 이번엔 영어를 사용하는 사람. 그래서 다음으로 찾은 테마가  </p>
<p><img src="/images/themes2.JPG" alt="Tranquilpeak 테마"><br><a href="http://louisbarranqueiro.github.io/hexo-theme-tranquilpeak/" target="_blank" rel="external">http://louisbarranqueiro.github.io/hexo-theme-tranquilpeak/</a>  </p>
<p>영어다. 심지어 친절하게도 문서정리가 잘 되어있다. 커스텀하는 것도 자세히 적어놨다. 하지만 학원에서 프로젝트가 들어가며 블로그를 만들기만 하고 가끔 들어가보는 정도였다. 학원이 끝나고 회사에 지원하면서 블로그도 정리하고 싶어서 hexo블로그 파일을 싹 지우고 새로 시작했다. 깔끔한 화면에 (영어로 문서가 작성되어있고) 기능이 많지는 않지만 내가 필요한 기능은 다 있는 고심 끝에 하나의 테마를 또 다시 선정했다.  </p>
<p><img src="/images/themes3.JPG" alt="MaterialFlow 테마"><br><a href="http://keyin.me/" target="_blank" rel="external">http://keyin.me/</a><br>너무너무너무 맘에 들었다. 깔끔하고 원하는 기능 다 들어있고 세팅을 다 하고 기쁨 마음에 구글에도 등록해놨다.  </p>
<p><img src="/images/hunBlog.JPG" alt="hun blog">  </p>
<p>하지만 또 문제가 발생하였으니 파이어폭스에서 접속하면  </p>
<p><img src="/images/hunBlog2.JPG" alt="hun blog">  </p>
<p>반이 잘려나온다. 뭐지 설마 IE는…</p>
<p><img src="/images/hunBlog3.JPG" alt="hun blog">  </p>
<p><strong>아….</strong>  안 나온다.</p>
<p>다시 테마를 바꾸자…  </p>
<p>깔끔한 화면에 (영어로 문서가 작성되어있고) 기능이 많지는 않지만 내가 필요한 기능은 다 있고 다른 브라우저에서 봤을 때도 똑같이 나오는 테마.  </p>
<p><img src="/images/themes4.JPG" alt="Icarus 테마">  </p>
<p>이젠 쭈욱 가자…  </p>
]]></content>
      
        <categories>
            
            <category> blog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[smallBookStore]]></title>
      <url>/2017/05/09/smallBookStore/</url>
      <content type="html"><![CDATA[<h4 id="새-프로젝트-시작"><a href="#새-프로젝트-시작" class="headerlink" title="새 프로젝트 시작"></a>새 프로젝트 시작</h4><p>블로그 정리가 안돼서 모두 지우고 새로 만들었다. 덕분에 글도 다 지워졌다.<br>학원에서 팀으로 만들었던 개인책장 프로젝트 말고 하나 더 Vuejs를 이용해서 프로젝트를 만들고 싶어서 많이 쓸 것 같은데 저번 프로젝트에선 사용하지 못 했던 기능을 넣어보고 싶었다.<br><a id="more"></a><br>여러 ui kit도 보고 어떤 식으로 만들어 볼까 고민만 하던 때에 이러다 시작도 못 하겠다 싶어서 일단은 시작했다. </p>
<h4 id="디자인"><a href="#디자인" class="headerlink" title="디자인"></a>디자인</h4><p><img src="https://github.com/byeonghun-lee/byeonghun-lee.github.io/blob/master/2017/05/09/smallBookStore/sketch.jpg?raw=true" alt="스케치">  </p>
<p><img src="https://github.com/byeonghun-lee/byeonghun-lee.github.io/blob/master/2017/05/09/smallBookStore/design.JPG?raw=true" alt="1차디자인">  </p>
<p>이런 식으로 만들어봐야지 하고 또 파워포인트로 작업했다….</p>
]]></content>
      
        <categories>
            
            <category> Project </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 프로젝트시작 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
